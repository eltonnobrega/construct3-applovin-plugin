{
  "languageTag": "en-US",
  "fileDescription": "Strings for applovin Plugin",
  "text": {
    "plugins": {
      "eltonnobrega_applovin": {
        "name": "applovin",
        "description": "No Ad-Sharing  |  Fully Open Source  |  No Remote Control",
        "help-url": "https://github.com/armandoalonso/c3IDE",
        "properties": {
          "sdk-key": {
            "name": "SDK Key",
            "desc": "SDK Key is a unique identifier for your AppLovin account."
          }
        },
        "aceCategories": {
          "banner ad": "banner ad",
          "interstitial ad": "interstitial ad",
          "rewarded ad": "rewarded ad",
          "mrec ad": "mrec ad",
          "setting": "setting",
          "consentstatus": "consent status",
          "development": "development"
        },
        "conditions": {
          "OnBannerAdLoaded": {
            "list-name": "On banner Load",
            "display-text": "On banner Load",
            "description": "An ad is received and is ready for display."
          },
          "OnBannerAdLoadFailed": {
            "list-name": "On banner Load Fail",
            "display-text": "On banner Load Fail",
            "description": "An ad request has been failed."
          },
          "OnBannerAdClicked": {
            "list-name": "On banner Click",
            "display-text": "On banner Click",
            "description": "this On banner Click"
          },
          "OnBannerAdCollapsed": {
            "list-name": "On banner Collapsed",
            "display-text": "On banner Collapsed",
            "description": "Triggered when a banner ad is collapsed"
          },
          "OnBannerAdExpanded": {
            "list-name": "On banner Expanded",
            "display-text": "On banner Expanded",
            "description": "Triggered when a banner ad is expanded"
          },
          "OnRewardedAdReceivedReward": {
            "list-name": "On rewarded ad received reward",
            "display-text": "On rewarded ad received reward",
            "description": "Received rewarded."
          },
          "OnRewardedAdHidden": {
            "list-name": "On rewarded ad Hide",
            "display-text": "On rewarded ad hide",
            "description": "this On rewarded ad Hide"
          },
          "OnRewardedAdFailedToDisplay": {
            "list-name": "On rewarded ad Display Fail",
            "display-text": "On rewarded ad Display Fail",
            "description": "Rewarded ad failed to display. We recommend loading the next ad."
          },
          "OnRewardedAdDisplayed": {
            "list-name": "On rewarded ad Display",
            "display-text": "On rewarded ad Display",
            "description": "this On rewarded ad Display"
          },
          "OnRewardedAdClicked": {
            "list-name": "On rewarded ad clicked",
            "display-text": "On rewarded ad clicked",
            "description": "this On rewarded ad clicked"
          },
          "OnRewardedAdLoadFailed": {
            "list-name": "On rewarded ad Load Fail",
            "display-text": "On rewarded ad Load Fail",
            "description": "An Event trigger response when an rewarded ad request failed. We recommend retrying with exponentially higher delays up to a maximum delay (in this case 64 seconds)"
          },
          "OnRewardedAdLoaded": {
            "list-name": "On rewarded ad Load",
            "display-text": "On rewarded ad Load",
            "description": "An Event trigger response when an rewarded ad has finished loading. Rewarded ad is ready to be shown. isRewardedAdReady(REWARDED_AD_UNIT_ID) will now return true"
          },
          "OnInterstitialLoaded": {
            "list-name": "On interstitial Load",
            "display-text": "On interstitial Load",
            "description": "An Event trigger response when an interstitial ad has finished loading. Interstitial ad is ready to be shown. isInterstitialReady(INTER_AD_UNIT_ID) will now return true"
          },
          "OnInterstitialLoadFailed": {
            "list-name": "On interstitial Load Fail",
            "display-text": "On interstitial Load Fail",
            "description": "An Event trigger response when an interstitial ad request failed. We recommend retrying with exponentially higher delays up to a maximum delay (in this case 64 seconds)"
          },
          "OnInterstitialClicked": {
            "list-name": "On Interstitial clicked",
            "display-text": "On Interstitial clicked",
            "description": "this On Interstitial clicked"
          },
          "OnInterstitialDisplayed": {
            "list-name": "On interstitial Display",
            "display-text": "On interstitial Display",
            "description": "this On interstitial Display"
          },
          "OnInterstitialAdFailedToDisplay": {
            "list-name": "On interstitial Display Fail",
            "display-text": "On interstitial Display Fail",
            "description": "Interstitial ad failed to display. We recommend loading the next ad"
          },
          "OnInterstitialHidden": {
            "list-name": "On interstitial Hidden",
            "display-text": "On interstitial Hidden",
            "description": "this On interstitial Hidden"
          },
          "isInterstitialReady": {
            "list-name": "Is Interstitial Ready",
            "display-text": "Is Interstitial Ready ([b]{0}[/b])",
            "description": "Check Interstitial ad is ready to be shown.",
            "params": {
              "INTER_AD_UNIT_ID": {
                "name": "Interstitial ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current Interstitial id"
              }
            }
          },
          "isRewardedAdReady": {
            "list-name": "Is Rewarded Ad Ready",
            "display-text": "Is Rewarded Ad Ready ([b]{0}[/b])",
            "description": "Check Rewarded Ad ad is ready to be shown.",
            "params": {
              "REWARDED_AD_UNIT_ID": {
                "name": "Rewarded ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current Rewardedad id"
              }
            }
          },
          "OnMRecAdExpanded": {
            "list-name": "On MRec ad Expanded",
            "display-text": "On MRec ad Expanded",
            "description": "Triggered when a MRec ad is expanded"
          },
          "OnMRecAdCollapsed": {
            "list-name": "On MRec ad Collapsed",
            "display-text": "On MRec ad Collapsed",
            "description": "Triggered when a MRec ad is collapsed"
          },
          "OnMRecAdClicked": {
            "list-name": "On MRec ad Click",
            "display-text": "On MRec ad Click",
            "description": "this On MRec ad Click"
          },
          "OnMRecAdLoadFailed": {
            "list-name": "On MRec ad Load Fail",
            "display-text": "On MRec ad Load Fail",
            "description": "An ad request has been failed."
          },
          "OnMRecAdLoaded": {
            "list-name": "On MRec ad Load",
            "display-text": "On MRec ad Load",
            "description": "An ad is received and is ready for display."
          },
          "OnConsentUnknown": {
            "list-name": "On consent unknown",
            "display-text": "On consent unknown",
            "description": "Consent dialog state is unknown. Proceed with initialization, but check if the consent dialog should be shown on the next application initialization."
          },
          "OnConsentNotRequired": {
            "list-name": "On consent not Required",
            "display-text": "On consent not Required",
            "description": "User consent not required. For example, the user is not in the EEA or the UK. No need to show consent dialog, proceed with initialization"
          },
          "OnConsentRequired": {
            "list-name": "On consent required",
            "display-text": "On consent required",
            "description": "You are now ready to show user consent dialog."
          },
          "hasUserConsent": {
            "list-name": "Has user consent",
            "display-text": "Has user consent",
            "description": "Check if has user consent."
          },
          "isAgeRestrictedUser": {
            "list-name": "Is age restricted user",
            "display-text": "Is age restricted user",
            "description": "Check age restricted user."
          },
          "isDoNotSell": {
            "list-name": "Is do not sell",
            "display-text": "Is do not sell",
            "description": "Check if do not sell."
          }
        },
        "actions": {
          "setBannerBackgroundColor": {
            "list-name": "Background Color Banner Ad show",
            "display-text": "Background Color Banner Ad show ([b]{0}[/b], [b]{1}[/b]).",
            "description": "Background Color a banner",
            "params": {
              "BANNER_AD_UNIT_ID": {
                "name": "banner ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed"
              },
              "backgroundColor": {
                "name": "BackgroundColor banner ad :",
                "desc": "Set background color ads are to be displayed"
              }
            }
          },
          "createBanner": {
            "list-name": "Create Banner Ad show",
            "display-text": "Create Banner Ad show ([b]{0}[/b], [b]{1}[/b]).",
            "description": "Create a banner",
            "params": {
              "BANNER_AD_UNIT_ID": {
                "name": "banner ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed"
              },
              "position": {
                "name": "Position banner ad :",
                "desc": "Set position ads are to be displayed. If empty use default BOTTOM_CENTER"
              }
            }
          },
          "hideBanner": {
            "list-name": "Banner Ad hide",
            "display-text": "Banner Ad hide ([b]{0}[/b])",
            "description": "Banner Ad hide",
            "params": {
              "BANNER_AD_UNIT_ID": {
                "name": "banner ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current Banner id"
              }
            }
          },
          "showBanner": {
            "list-name": "Banner Ad show",
            "display-text": "Banner Ad show ([b]{0}[/b]).",
            "description": "Load and show a banner",
            "params": {
              "BANNER_AD_UNIT_ID": {
                "name": "banner ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current Banner id"
              }
            }
          },
          "loadRewardedAd": {
            "list-name": "Rewarded Ad load",
            "display-text": "Rewarded Ad load ([b]{0}[/b]).",
            "description": "Load an Rewarded ad to be shown.",
            "params": {
              "REWARDED_AD_UNIT_ID": {
                "name": "Rewarded ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed"
              }
            }
          },
          "showRewardedAd": {
            "list-name": "Rewarded Ad show",
            "display-text": "Rewarded Ad show ([b]{0}[/b]).",
            "description": "Show a loaded Rewarded ad.",
            "params": {
              "REWARDED_AD_UNIT_ID": {
                "name": "Rewarded ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current Rewardedad id"
              }
            }
          },
          "showInterstitial": {
            "list-name": "Interstitial Ad show",
            "display-text": "Interstitial Ad show ([b]{0}[/b]).",
            "description": "Show a loaded interstitial ad.",
            "params": {
              "INTER_AD_UNIT_ID": {
                "name": "Interstitial ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current Interstitial id"
              }
            }
          },
          "loadInterstitial": {
            "list-name": "Interstitial Ad load",
            "display-text": "Interstitial Ad load ([b]{0}[/b]).",
            "description": "Load an interstitial ad to be shown.",
            "params": {
              "INTER_AD_UNIT_ID": {
                "name": "Interstitial ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed"
              }
            }
          },
          "initialize": {
            "list-name": "initialize addon",
            "display-text": "initialize addon ([b]{0}[/b])",
            "description": "initialize addon",
            "params": {
              "SDK_KEY": {
                "name": "SDK Key :",
                "desc": "Set this to the sdk key"
              }
            }
          },
          "setHasUserConsent": {
            "list-name": "User consent",
            "display-text": "User consent ([b]{0}[/b])",
            "description": "Set user consent.",
            "params": {
              "consent": {
                "name": "User Consent :",
                "desc": "If the user consents, set the user consent flag to Enable.",
                "items": {
                  "true": "Enabled",
                  "false": "Disabled"
                }
              }
            }
          },
          "setIsAgeRestrictedUser": {
            "list-name": "Age restricted",
            "display-text": "Age restricted ([b]{0}[/b])",
            "description": "Set age restricted.",
            "params": {
              "age_restricted": {
                "name": "Age restricted :",
                "desc": "If you know that the user is in an age-restricted category (i.e., under the age of 16), set the age-restricted user flag to Enable.",
                "items": {
                  "true": "Enabled",
                  "false": "Disabled"
                }
              }
            }
          },
          "setDoNotSell": {
            "list-name": "Do Not Sell",
            "display-text": "Do Not Sell ([b]{0}[/b])",
            "description": "Sale or not of their personal information.",
            "params": {
              "do_not_sell": {
                "name": "Do Not Sell :",
                "desc": "If such a user does not opt out of the sale of their personal information, set the do-not-sell flag to Disabled.",
                "items": {
                  "true": "Enabled",
                  "false": "Disabled"
                }
              }
            }
          },
          "createMRec": {
            "list-name": "Create MRec Ad show",
            "display-text": "Create MRec Ad show ([b]{0}[/b], [b]{1}[/b]).",
            "description": "Create a MRec",
            "params": {
              "MREC_AD_UNIT_ID": {
                "name": "MRec ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed"
              },
              "position": {
                "name": "Position MRec ad :",
                "desc": "Set position ads are to be displayed. If empty use default BOTTOM_CENTER"
              }
            }
          },
          "showMRec": {
            "list-name": "Show MRec Ad show",
            "display-text": "Show MRec Ad show ([b]{0}[/b]).",
            "description": "Show a MRec",
            "params": {
              "MREC_AD_UNIT_ID": {
                "name": "MRec ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current MRec id"
              }
            }
          },
          "hideMRec": {
            "list-name": "Hide MRec Ad",
            "display-text": "Hide MRec Ad ([b]{0}[/b]).",
            "description": "Hide a MRec",
            "params": {
              "MREC_AD_UNIT_ID": {
                "name": "MRec ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current MRec id"
              }
            }
          },
          "destroyBanner": {
            "list-name": "Banner Ad Destroy",
            "display-text": "Banner Ad Destroy ([b]{0}[/b])",
            "description": "Banner Ad Destroy",
            "params": {
              "BANNER_AD_UNIT_ID": {
                "name": "banner ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current Banner id"
              }
            }
          },
          "destroyMRec": {
            "list-name": "Destroy MRec Ad",
            "display-text": "Destroy MRec Ad ([b]{0}[/b]).",
            "description": "Destroy a MRec",
            "params": {
              "MREC_AD_UNIT_ID": {
                "name": "MRec ad Unit Id :",
                "desc": "Set this to the unique identifier given to the ad unit in your app where ads are to be displayed. If empty use last current MRec id"
              }
            }
          },
          "setVerboseLogging": {
            "list-name": "Verbose Logging",
            "display-text": "Verbose Logging ([b]{0}[/b])",
            "description": "Verbose Logging.",
            "params": {
              "condition": {
                "name": "Verbose Logging :",
                "desc": "Set Verbose Logging.",
                "items": {
                  "true": "Enabled",
                  "false": "Disabled"
                }
              }
            }
          },
          "setMuted": {
            "list-name": "Set Muted",
            "display-text": "Set Muted ([b]{0}[/b])",
            "description": "Set Muted.",
            "params": {
              "muted": {
                "name": "Set Muted :",
                "desc": "Set Muted.",
                "items": {
                  "true": "Enabled",
                  "false": "Disabled"
                }
              }
            }
          },
          "showMediationDebugger": {
            "list-name": "Show Mediation Debugger",
            "display-text": "Show Mediation Debugger",
            "description": "Show Mediation Debugger."
          }
        },
        "expressions": {
          "debuglog": {
            "translated-name": "Debug log",
            "description": "This Any event Debug log"
          },
          "debugevent": {
            "translated-name": "Debug JSON Event Response",
            "description": "This is the debug JSON Event response "
          },
          "consent-status": {
            "translated-name": "ConsentStatus",
            "description": "This is the ConsentStatus value."
          },
          "countrycode": {
            "translated-name": "Countrycode",
            "description": "This is the countryCode value."
          }
        }
      }
    }
  }
}